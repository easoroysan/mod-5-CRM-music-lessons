{"version":3,"sources":["actions/current_user.js","components/login.js","actions/lessons.js","components/newAttendanceForm.js","components/main.js","containers/home.js","components/sidebar.js","actions/students.js","containers/students.js","actions/instructors.js","components/newLessonForm.js","components/studentLessons.js","containers/studentPage.js","components/newInstructorForm.js","containers/instructors.js","components/newClassTimeForm.js","actions/class_times.js","components/instructorSchedule.js","containers/instructorPage.js","actions/families.js","components/newFamilyForm.js","containers/families.js","components/newContactForm.js","components/newStudentForm.js","containers/familyPage.js","actions/contacts.js","containers/contacts.js","containers/contactPage.js","containers/lessonPage.js","containers/default.js","App.js","reducers/index.js","reducers/students.js","reducers/instructors.js","reducers/current_user.js","reducers/lessons.js","reducers/families.js","reducers/contacts.js","reducers/desiredInstructor.js","reducers/desiredStudent.js","reducers/desiredFamily.js","reducers/desiredContact.js","reducers/desiredClassTimes.js","reducers/desiredLesson.js","index.js"],"names":["authSuccess","currentUser","type","LoginForm","_this","this","react_default","a","createElement","Header","as","icon","textAlign","Icon","name","circular","Content","Subheader","Divider","Grid","verticalAlign","Column","style","maxWidth","color","Form","size","onSubmit","e","props","handleSubmit","target","username","value","password","Segment","Input","id","fluid","iconPosition","placeholder","Button","Container","text","React","Component","mapDispatchToProps","dispatch","fetch","method","headers","Content-Type","body","JSON","stringify","then","r","json","result","localStorage","setItem","token","message","Object","objectSpread","current_user","schools","alert","connect","state","authorized","users","fetchLessons","lessons","updateLessons","lesson","fetchDesiredLesson","NewAttendanceForm","submitted","makeUpStatus","info","_this2","make_up","attendanceInfo","lesson_id","school_id","forEach","key","Authorization","getItem","error","setState","intervalID","setInterval","clearInterval","_this3","date","Date","padToTwo","number","concat","slice","today","getFullYear","getMonth","getDate","success","margin","Group","widths","defaultValue","required","label","Dropdown","selection","options","onChange","d","Message","header","desiredLesson","MainPage","initialFetch","first_name","map","school","Table","celled","Row","HeaderCell","Body","filter","active","sort","b","instructor","last_name","lastAttendance","attendances","length","_lastAttendance","status","cancelled_date","Cell","react_router_dom","to","class_time","day","start_time","end_time","onClick","showForm","hideForm","newAttendanceForm","student","instrument","getDay","instructor_notes","misc_notes","Home","main","login","SidebarClass","visible","homeButton","background","instructorButton","studentButton","familyButton","clientButton","logoutButton","handleHideClick","handleShowClick","handleSidebarHide","disabled","Sidebar","Menu","animation","inverted","onHide","vertical","width","Item","onMouseEnter","onMouseLeave","window","location","reload","react_router","fetchDesiredStudent","Students","searchQuery","isLoading","setSearchQuery","debounce","query","console","log","desiredStudents","students","searchTerm","toUpperCase","includes","phone_number","family","family_name","Search","open","loading","marginLeft","onSearchChange","family_id","email","date_of_birth","fetchStudents","fetchInstructors","instructors","fetchDesiredInstructor","NewLessonForm","instructorChosen","instructor_id","class_id","instructorSelect","class_time_id","lessonInfo","student_id","addDesiredLesson","instructorOptions","class_times","some","_this$props$selectedI","selectedInstructor","instrument_1","instrument_2","instrument_3","classTimeOptions","time","longStart","split","shortStart","longEnd","shortEnd","instrumentOptions","Select","search","TextArea","_this4","desiredInstructors","desiredStudent","desiredInstructor","StudentLessons","addLessonForm","newLessonForm","_lesson$class_time","StudentPage","old_student","showLessons","handleChange","updateDesiredStudent","_this$props$student","medical_notes","billing_notes","studentLessons","href","pop","NewInstructorForm","school_ids","newInstructorInfo","schoolOptions","multiple","Instructors","newForm","newInstructorForm","emergency_number","NewClassTimeForm","classTimeInfo","addDesiredClassTime","dayNames","dayOptions","indexOf","InstructorSchedule","classForm","handleActive","desiredTime","find","confirm","runFetch","desiredTimes","newClassTimeForm","classTime","desiredContacts","contacts","contact","desiredLessons","fetchDesiredClassTimes","updateDesiredClassTime","desiredClassTimes","InstructorPage","old_instructor","schedule","updateDesiredInstructor","_this$props$instructo","billing_address","pay_rate","biography","instructorSchedule","desiredSchools","fetchDesiredFamily","updateDesiredFamily","NewFamilyForm","familyInfo","billing_total","Families","desiredFamiles","families","newFamilyForm","fetchFamilies","NewContactForm","newContactInfo","toConsumableArray","desiredFamily","NewStudentForm","newStudentInfo","FamilyPage","old_family","studentForm","contactForm","_this$props$family","newContactForm","relation_to_students","newStudentForm","_class_times$find","fetchDesiredContact","Contacts","organizedContacts","client","fetchContacts","ContactPage","old_contact","updateDesiredContact","_this$props$contact","desiredContact","LessonPage","old_lesson","attendanceForm","editAttendance","updateDesiredLesson","parseInt","_this$props$lesson","attendance","handleAttendanceSubmit","Default","App","sidebar","exact","path","render","home","containers_students","strict","studentPage","containers_instructors","instructorPage","containers_families","familyPage","containers_contacts","contactPage","lessonPage","component","containers_default","initial","res","combineReducers","arguments","undefined","action","longerStart","shorterStart","longerEnd","shorterEnd","betterLesson","activeSchedule","defineProperty","middlewares","applyMiddleware","ReduxThunk","__REDUX_DEVTOOLS_EXTENSION__","push","middleware","compose","apply","store","createStore","rootReducer","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c800ce79.chunk.js","sourcesContent":["export function authSuccess(currentUser){\n    return {type: \"AUTHORIZATION_SUCCESS\", currentUser: currentUser}\n}\nexport function authFail(){\n    return {type: \"AUTHORIZATION_FAIL\"}\n}","import React from 'react'\nimport { Button, Form, Grid, Header, Segment, Icon, Divider, Container } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport { authSuccess,authFail } from '../actions/current_user'\n\n\nclass LoginForm extends React.Component{\n\n  render(){\n    return(\n      <div>\n        <Header as='h2' icon textAlign='center'>\n          <Icon name='music' circular />\n          <Header.Content>Welcome to Easo's Music Lessons Scheduler</Header.Content>\n          <Header.Subheader>A new and personalized application for music schools</Header.Subheader>\n        </Header>\n\n        <Divider/>\n\n        <Grid textAlign='center' verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='black' textAlign='center'>\n              Log-in to your account\n            </Header>\n            <Form size='large' onSubmit={e=> this.props.handleSubmit(e.target.username.value, e.target.password.value)}>\n              <Segment>\n                <Form.Input\n                  id=\"username\"\n                  fluid\n                  icon='user'\n                  iconPosition='left'\n                  placeholder='Username'\n                  type='text'\n                />\n                <Form.Input\n                  id=\"password\"\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  />\n                \n                <Button color='black' fluid size='large'>\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n\n        <Divider/>\n\n        <Container text>\n          <Header as='h2'>What is Easo's Music Lessons Scheduler?</Header>\n          <p>Easo Scheduler is an application developed by Roysan Easo. This application is primarily used to organize students for a music school and keep track of information such as lessons, attendance, and so on. It is also designed to make the enrollment process easier by doing things like automatically sending emails upon enrollment. Because it is in the early development stages, Roysan is able to add or change features to accomodate users upon request.</p>\n        </Container>\n        <br/><br/>\n        <Container text>\n          <Header as='h2'>How much does it cost?</Header>\n          <p>Because this application has only recently been created and is only managed by one person, it is currently free!</p>\n        </Container>\n        <br/><br/>\n        <Container text>\n          <Header as='h2'>How can I get started?</Header>\n          <p>Simply send an email to easo.roysan@gmail.com and Roysan will keep direct contact with you to answer any questions you may have and set up an account for you.</p>\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    authorized: state.users\n  }\n)\n\nconst mapDispatchToProps = {\n  handleSubmit: (username,password) => dispatch =>{\n    fetch('http://localhost:5000/login',{\n      method:'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n    .then(r => r.json())\n    .then(result => {\n      localStorage.setItem('token',result.token)\n      if(result.message === \"Confirmed\"){\n        dispatch(authSuccess({ ...result.current_user, schools: result.schools }))\n      }else{\n        dispatch(authFail())\n        alert(result.message)\n      }\n    })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","export function fetchLessons(lessons){\n    return {type: \"FETCH_LESSONS\", lessons}\n}\n\nexport function updateLessons(lesson){\n    return {type: \"UPDATE_LESSONS\", lesson}\n}\n\nexport function fetchDesiredLesson(lesson){\n    return {type: \"FETCH_DESIRED_LESSON\", lesson}\n}\n\nexport function addDesiredLesson(lesson){\n    return {type: \"ADD_DESIRED_LESSON\", lesson}\n}\n\nexport function updateDesiredLesson(key,value){\n    return {type: \"UPDATE_DESIRED_LESSON\", key, value}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport { authFail } from '../actions/current_user';\nimport { fetchDesiredLesson, updateLessons } from '../actions/lessons';\n\nclass NewAttendanceForm extends React.Component{\n\n    state ={\n        submitted: false,\n        makeUpStatus: false\n    }\n\n    handleSubmit(info){\n        let make_up = this.state.makeUpStatus\n        let keys = ['date','status','make_up','cancelled_date']\n        let attendanceInfo = { lesson_id: this.props.lesson.id, school_id: this.props.lesson.school_id }\n        keys.forEach( key => {\n            if(key === 'make_up'){\n                attendanceInfo[key]=make_up\n            }else if(key === 'cancelled_date' && !make_up){\n                attendanceInfo[key]=null\n            }else{\n                attendanceInfo[key]=info[key].value\n            }\n        })\n        fetch('http://localhost:5000/attendances',{\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(attendanceInfo)\n        })\n        .then(r=>r.json())\n        .then(lesson =>{\n            if(lesson.error){\n                this.props.dispatch(authFail())\n            }else{\n                this.setState({ submitted: true })\n                this.props.dispatch(fetchDesiredLesson(lesson))\n                this.props.dispatch(updateLessons(lesson))\n                this.intervalID = setInterval( ()=>(\n                    this.setState({ submitted: false })\n                ),3000)\n            }\n        })\n    }\n\n    componentDidMount(){\n        fetchDesiredLesson(this.props.lesson)\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n        let date = new Date()\n        let padToTwo = number => number <= 99 ? `0${number}`.slice(-2) : number;\n        let today = `${date.getFullYear()}-${padToTwo( date.getMonth()+1 )}-${padToTwo( date.getDate() )}`\n\n        return(<div>\n\n            <Form\n                success\n                style={{margin: '10px'}}\n                onSubmit={ (e)=>this.handleSubmit(e.target) }\n            >\n                    \n                <Form.Group widths='equal'>\n                    <Form.Input id='date' type='date' defaultValue={today} required fluid label='Date' />\n                    <Form.Input id='status' required fluid label='Status' />\n                </Form.Group>\n                <Form.Group widths='equal'>\n                    <Form.Dropdown\n                        selection\n                        options={[\n                            { key: 1, value: true, text: \"True\" },\n                            { key: 2, value: false, text: \"False\" }\n                        ]}\n                        value={this.state.makeUpStatus}\n                        label=\"Make-Up\"\n                        onChange={(e,d)=>{\n                            this.setState({ makeUpStatus: d.value })\n                        }}\n                    />\n                    {\n                        this.state.makeUpStatus ? \n                        <Form.Input required id='cancelled_date' type='date' fluid label='Cancelled Date' />\n                        :\n                        null\n                    }\n                </Form.Group>\n                <Button type='submit'>Add Attendance</Button>\n                {this.state.submitted ? <Message success header='Attendance submitted' /> : null}\n                \n            </Form>\n        </div>)\n    }\n}\n\nconst mapStateToProps = state =>(\n    {\n        lesson: state.desiredLesson\n    }\n)\n\nexport default connect(mapStateToProps)(NewAttendanceForm);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Header, Icon, Table, Divider, Button } from 'semantic-ui-react'\nimport { fetchLessons, fetchDesiredLesson } from '../actions/lessons';\nimport { authFail } from '../actions/current_user';\nimport { Link } from 'react-router-dom'\nimport NewAttendanceForm from './newAttendanceForm';\n\n\nclass MainPage extends React.Component{\n\n    componentDidMount(){\n        this.props.initialFetch()\n    }\n\n    render(){\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='music' circular />\n                    <Header.Content>Hello {this.props.currentUser.first_name}</Header.Content>\n                    <Header.Subheader>Here are today's lessons</Header.Subheader>\n                </Header>\n\n                {this.props.currentUser.schools.map( school =>(\n                    <div key={school.id}>\n                        <Divider/>\n                        <Header as='h2'>\n                            <Header.Content>{school.name}</Header.Content>\n                        </Header>\n                        <Table celled>\n\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell>Instructor</Table.HeaderCell>\n                                    <Table.HeaderCell>Time</Table.HeaderCell>\n                                    <Table.HeaderCell>Student</Table.HeaderCell>\n                                    <Table.HeaderCell>Instrument</Table.HeaderCell>\n                                    <Table.HeaderCell>Last Attendance</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n\n                            <Table.Body>\n                                {this.props.lessons.filter(lesson => lesson.school.name === school.name && lesson.active)\n                                .sort( (a,b) => a.instructor.last_name > b.instructor.last_name ? 1 : a.instructor.last_name < b.instructor.last_name ? -1 : 0)\n                                .map( lesson =>{\n                                    let lastAttendance = {}\n                                    if(lesson.attendances.length > 0){\n                                        lastAttendance = lesson.attendances[lesson.attendances.length-1]\n                                    }\n                                    let { date, status, make_up, cancelled_date } = lastAttendance\n                                    return(\n                                        <Table.Row key={lesson.id}>\n                                        <Table.Cell><Link to={`/instructors/${lesson.instructor.id}`} >{lesson.instructor.first_name} {lesson.instructor.last_name}</Link></Table.Cell>\n                                        <Table.Cell>\n                                            <Link to={`/lessons/${lesson.id}`}>{lesson.class_time.day} | {lesson.class_time.start_time}-{lesson.class_time.end_time}</Link>\n                                            {\n                                                this.props.lesson_id !== lesson.id ?\n                                                <Button onClick={()=> this.props.showForm(lesson)}>Add an Attendance</Button>\n                                                :\n                                                <Button onClick={()=> this.props.hideForm()}>Hide Form</Button>\n                                            }\n                                            {this.props.lesson_id===lesson.id ? <NewAttendanceForm/> : null}\n                                        </Table.Cell>\n                                        <Table.Cell><Link to={`/students/${lesson.student.id}`} >{lesson.student.first_name} {lesson.student.last_name}</Link></Table.Cell>\n                                        <Table.Cell>{lesson.instrument}</Table.Cell>\n                                        <Table.Cell>{lesson.attendances.length > 0 ? `${date} | ${status} ${make_up ? `| Make-up for lesson missed on ${cancelled_date}` : \"\"}` : null}</Table.Cell>\n                                        </Table.Row>\n                                    )\n                                })}\n                            </Table.Body>\n                        </Table>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state =>(\n    {\n        currentUser: state.currentUser,\n        lessons: state.lessons,\n        lesson_id: state.desiredLesson.id\n    }\n)\n\nconst mapDispatchToProps = {\n    initialFetch: ()=>dispatch=>{\n        let date = new Date()\n        let dayNames = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday'\n        ]\n        fetch(`http://localhost:5000/lessons/day_${dayNames[date.getDay()]}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(lessons => {\n            lessons.error ? dispatch(authFail()) : dispatch(fetchLessons(lessons))\n        })\n    },\n    showForm: (lesson) => dispatch => dispatch(fetchDesiredLesson(lesson)),\n    hideForm: () => dispatch => dispatch(fetchDesiredLesson({\n        class_time: { start_time: \"\" },\n        student: {},\n        instructor: {},\n        attendances: [],\n        school: {},\n        instrument: \"\",\n        instructor_notes: \"\",\n        misc_notes: \"\"\n    }))\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)\n\n","import React from 'react'\nimport LoginForm from '../components/login';\nimport { connect } from 'react-redux'\nimport MainPage from '../components/main'\n\nclass Home extends React.Component{\n\n    render(){\n        let homePage = <div></div>\n        this.props.authorized ? homePage=<MainPage/> : homePage=<LoginForm/>\n        return homePage\n    }\n\n}\n\nexport default connect(state => ({ authorized: state.currentUser.authorized }))(Home)","import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Button, Icon, Menu, Sidebar } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\n\n\nclass SidebarClass extends React.Component {\n    state = {\n        visible: false,\n        homeButton: {background: 'black'},\n        instructorButton: {background: 'black'},\n        studentButton: {background: 'black'},\n        familyButton: {background: 'black'},\n        clientButton: {background: 'black'},\n        logoutButton: {background: 'black'}\n    }\n\n    handleHideClick = () => this.setState({ visible: false })\n    handleShowClick = () => this.setState({ visible: true })\n    handleSidebarHide = () => this.setState({ visible: false })\n\n    render() {\n        const { visible } = this.state\n        if(this.props.currentUser.authorized){\n            return (\n                <div>\n                    <Button.Group>\n                    <Button disabled={visible} onClick={this.handleShowClick}>\n                        Menu\n                    </Button>\n                    </Button.Group>\n        \n                    <Sidebar\n                        as={Menu}\n                        animation='overlay'\n                        icon='labeled'\n                        inverted\n                        onHide={this.handleSidebarHide}\n                        vertical\n                        visible={visible}\n                        width='thin'\n                    >\n                        <Link to=\"/\" onClick={this.handleHideClick}>\n                            <Menu.Item\n                            style={this.state.homeButton}\n                            onMouseEnter={()=> this.setState({ homeButton: {background:'gray'}})}\n                            onMouseLeave={()=> this.setState({ homeButton: {background:'black'}})}\n                            >\n                                <Icon name='home' />\n                                Home\n                            </Menu.Item>\n                        </Link>\n                        <Link to=\"/instructors\" onClick={this.handleHideClick}>\n                            <Menu.Item\n                                style={this.state.instructorButton}\n                                onMouseEnter={()=> this.setState({ instructorButton: {background:'gray'}})}\n                                onMouseLeave={()=> this.setState({ instructorButton: {background:'black'}})}\n                            >\n                                <Icon name='microphone' />\n                                Instructors\n                            </Menu.Item>\n                        </Link>\n                        <Link to=\"/students\" onClick={this.handleHideClick}>\n                            <Menu.Item\n                            style={this.state.studentButton}\n                            onMouseEnter={()=> this.setState({ studentButton: {background:'gray'}})}\n                            onMouseLeave={()=> this.setState({ studentButton: {background:'black'}})}\n                            >\n                                <Icon name='headphones' />\n                                Students\n                            </Menu.Item>\n                        </Link>\n                        <Link to=\"/families\" onClick={this.handleHideClick}>\n                            <Menu.Item\n                                style={this.state.familyButton}\n                                onMouseEnter={()=> this.setState({ familyButton: {background:'gray'}})}\n                                onMouseLeave={()=> this.setState({ familyButton: {background:'black'}})}\n                            >\n                                <Icon name='group' />\n                                Families\n                            </Menu.Item>\n                        </Link>\n                        <Link to=\"/contacts\" onClick={this.handleHideClick}>\n                            <Menu.Item\n                                style={this.state.clientButton}\n                                onMouseEnter={()=> this.setState({ clientButton: {background:'gray'}})}\n                                onMouseLeave={()=> this.setState({ clientButton: {background:'black'}})}\n                            >\n                                <Icon name='phone' />\n                                Contacts\n                            </Menu.Item>\n                        </Link>\n                        <Link to=\"/\" onClick={()=>{\n                            this.handleHideClick()\n                            localStorage.setItem('token',\"logged out\")\n                            window.location.reload()\n                        }}>\n                            <Menu.Item\n                                style={this.state.logoutButton}\n                                onMouseEnter={()=> this.setState({ logoutButton: {background:'gray'}})}\n                                onMouseLeave={()=> this.setState({ logoutButton: {background:'black'}})}\n                            >\n                                <Icon name='log out' />\n                                Logout\n                            </Menu.Item>\n                        </Link>\n                    </Sidebar>\n                </div>\n            )\n        }\n        else{\n            //only have the bottom information when there is an error, not when just logging out\n            localStorage.setItem('token',\"logged out\")\n            // alert(`Error:(Put error message here)\\nPlease log in again. If the problem persists, please contact support for help.`)\n            return <Redirect to='/' />\n        }\n    }\n}\n\nconst mapStateToProps = state =>(\n    {\n        currentUser: state.currentUser\n    }\n)\n\nexport default connect(mapStateToProps)(SidebarClass);","export function fetchStudents(students){\n    return {type: \"FETCH_STUDENTS\", students}\n}\n\nexport function fetchDesiredStudent(student){\n    return {type: \"FETCH_DESIRED_STUDENT\", student}\n}\n\nexport function updateDesiredStudent(key,value){\n    return {type: \"STUDENT_ONCHANGE\", key, value}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStudents } from '../actions/students';\nimport { authFail } from '../actions/current_user';\nimport { Header, Icon, Table, Search } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\n\n\nclass Students extends React.Component{\n\n    state={\n        searchQuery: \"\",\n        isLoading: false\n    }\n\n    setSearchQuery = debounce((query) => {\n        console.log(query)\n        this.setState({ searchQuery: query, isLoading: false })\n    }, 500)\n\n    render(){\n\n        let desiredStudents = this.props.students\n        if(this.state.searchQuery !== \"\"){\n            let searchTerm = this.state.searchQuery.toUpperCase()\n            desiredStudents = this.props.students.filter( student =>(\n                student.first_name.toUpperCase().includes(searchTerm) || \n                student.last_name.toUpperCase().includes(searchTerm) ||\n                student.phone_number.toUpperCase().includes(searchTerm) ||\n                student.family.family_name.toUpperCase().includes(searchTerm)\n            ))\n        }\n\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='headphones' />\n                    <Header.Content>Students</Header.Content>\n                </Header>\n\n                <Search\n                    open={false}\n                    loading={this.state.isLoading}\n                    size='small'\n                    style={{ marginLeft: '10px' }}\n                    placeholder='Name or Phone Number'\n                    onSearchChange={(e)=>{\n                        this.setState({ isLoading: true })\n                        this.setSearchQuery(e.target.value)\n                    }}\n                />\n\n                <Table celled>\n\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Name</Table.HeaderCell>\n                            <Table.HeaderCell>Family Name</Table.HeaderCell>\n                            <Table.HeaderCell>School</Table.HeaderCell>\n                            <Table.HeaderCell>Phone Number</Table.HeaderCell>\n                            <Table.HeaderCell>Email</Table.HeaderCell>\n                            <Table.HeaderCell>Date of Birth</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {desiredStudents.map( student =>(\n                            <Table.Row key={student.id}>\n                                <Table.Cell><Link to={`/students/${student.id}`} >{student.first_name} {student.last_name}</Link></Table.Cell>\n                                <Table.Cell><Link to={`/families/${student.family_id}`} >{student.family.family_name}</Link></Table.Cell>\n                                <Table.Cell>{student.school.name}</Table.Cell>\n                                <Table.Cell>{student.phone_number}</Table.Cell>\n                                <Table.Cell>{student.email}</Table.Cell>\n                                <Table.Cell>{student.date_of_birth}</Table.Cell>\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                </Table>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:5000/students',{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(students => {\n            students.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchStudents(students))\n        })\n    }\n}\n\nexport default connect(state => ({ students: state.students }))(Students);","export function fetchInstructors(instructors){\n    return {type: \"FETCH_INSTRUCTORS\", instructors}\n}\n\nexport function fetchDesiredInstructor(instructor){\n    return {type: \"FETCH_DESIRED_INSTRUCTOR\", instructor}\n}\n\nexport function updateDesiredInstructor(key,value){\n    return {type: \"INSTRUCTOR_ONCHANGE\", key, value}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Divider, Message } from 'semantic-ui-react';\nimport { authFail } from '../actions/current_user';\nimport { fetchInstructors, fetchDesiredInstructor } from '../actions/instructors';\nimport { addDesiredLesson } from '../actions/lessons';\n\nclass NewLessonForm extends React.Component{\n\n    state={\n        submitted: false,\n        instructorChosen: false,\n        instructor_id: null,\n        class_id: null,\n        instrument: null\n    }\n\n    handleSubmit(info){\n\n        if(!this.state.instrument){\n            alert(\"Please select an instrument\")\n        }else if(!this.state.class_id){\n            alert(\"Please select a class time\")\n        }else{\n\n            let class_time_id = this.state.class_id\n            let instrument = this.state.instrument\n\n            let lessonInfo = {\n                class_time_id,\n                student_id: this.props.student.id,\n                school_id: this.props.student.school_id,\n                instrument,\n                active: true,\n                instructor_notes: info.instructor_notes.value,\n                misc_notes: info.misc_notes.value\n            }\n\n            console.log(lessonInfo)\n            \n            fetch('http://localhost:5000/lessons',{\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/json',\n                    'Authorization': localStorage.getItem('token')\n                },\n                body: JSON.stringify(lessonInfo)\n            })\n            .then(r=>r.json())\n            .then(lesson =>{\n                console.log(lesson)\n                if(lesson.error){\n                    this.props.dispatch(authFail())\n                }else{\n                    this.props.dispatch(addDesiredLesson(lesson))\n                    this.setState({\n                        submitted: true,\n                        instructorChosen: false,\n                        instructor_id: null\n                    })\n                    this.intervalID = setInterval(() => {\n                        this.setState({\n                            submitted: false\n                        })\n                    }, 2000);\n                }\n            })\n        }\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    instructorSelect = (id) => {\n        if(id !== null){\n            fetch(`http://localhost:5000/instructors/${id}`,{\n                method:\"GET\",\n                headers: {\n                    'Content-Type':'application/json',\n                    'Authorization': localStorage.getItem('token')\n                }\n            })\n            .then(r=> r.json())\n            .then(instructor => {\n                if(instructor.error){\n                    this.props.dispatch(authFail())\n                }else{\n                    this.props.dispatch(fetchDesiredInstructor( instructor ))\n                    this.setState({ instructorChosen: true })\n                }\n            })\n        }\n    }\n\n    render(){\n        let instructorOptions = this.props.instructors.filter( instructor =>(\n            instructor.active && instructor.class_times.length > 0 && instructor.class_times.some( class_time => class_time.active )\n        ))\n        .map( instructor => ({ key: instructor.id, value: instructor.id, text: `${instructor.first_name} ${instructor.last_name}`}))\n\n        let { instrument_1, instrument_2, instrument_3, class_times } = this.props.selectedInstructor\n\n        let classTimeOptions = class_times.filter( time => time.active )\n        .map(class_time => {\n\n            let longStart = class_time.start_time.split(\"T\")[1]\n            let shortStart = `${longStart.split(\":\")[0]}:${longStart.split(\":\")[1]}`\n    \n            let longEnd = class_time.end_time.split(\"T\")[1]\n            let shortEnd = `${longEnd.split(\":\")[0]}:${longEnd.split(\":\")[1]}`\n\n            return {\n                key: class_time.id,\n                value: class_time.id,\n                text: `${class_time.day} | ${shortStart}-${shortEnd}`\n            }\n        })\n\n        let instrumentOptions = [instrument_1, instrument_2, instrument_3]\n        .filter( instrument => instrument !== \"\" )\n        .map( instrument => ({ key: instrument, value: instrument, text: instrument }))\n\n        return(<div>\n            <Divider />\n            <Form success style={{margin: '10px'}} onSubmit={(e)=>this.handleSubmit(e.target)}>\n                    \n                <Form.Group widths='equal'>\n                    <Form.Select\n                        id='instructor'\n                        search\n                        required \n                        options={instructorOptions}\n                        value={this.state.instructor_id}\n                        label='Instructor'\n                        onChange={(e,d)=>{\n                            this.setState({instructor_id: d.value})\n                            this.instructorSelect(d.value)\n                        }}\n                    />\n                    {\n                        this.state.instructorChosen ?\n                        <Form.Select\n                            id='instrument'\n                            required \n                            options={instrumentOptions}\n                            value={this.state.instrument}\n                            label='Instrument'\n                            onChange={(e,d)=>{\n                                this.setState({instrument: d.value})\n                            }}\n                        /> :\n                        null\n                    }\n                    {\n                        this.state.instructorChosen ?\n                        <Form.Select\n                            id='class_time'\n                            search\n                            required\n                            options={classTimeOptions}\n                            value={this.state.class_id}\n                            label='Class Time'\n                            onChange={(e,d)=>{\n                                this.setState({class_id: d.value})\n                            }}\n                        /> :\n                        null\n                    }\n                </Form.Group>\n\n                {\n                    this.state.instructorChosen ?\n                    <div>\n                        <Form.TextArea id='instructor_notes' label='Instructor Notes' ></Form.TextArea>\n                        <Form.TextArea id='misc_notes' label='Miscellaneous Notes' ></Form.TextArea>\n\n                        <Button type='submit'>Add Lesson</Button>\n                    </div>\n                    :null\n                }\n                {this.state.submitted ? <Message success header='Lesson has been added' /> : null}\n            </Form>\n            <Divider />\n        </div>)\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:5000/instructors',{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(instructors => {\n            if(instructors.error){\n                this.props.dispatch(authFail())\n            }else{\n                let desiredInstructors = instructors.filter(instructor =>{\n                    let schoolCheck = instructor.schools.map( school => school.id)\n                    return schoolCheck.includes(this.props.student.school_id) && instructor.active\n                })\n                this.props.dispatch(fetchInstructors( desiredInstructors ))\n            }\n        })\n    }\n\n}\n\nconst mapStateToProps = state =>(\n    {\n        currentUser: state.currentUser,\n        student: state.desiredStudent,\n        instructors: state.instructors,\n        selectedInstructor: state.desiredInstructor\n    }\n)\n\nexport default connect(mapStateToProps)(NewLessonForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Table, Divider, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport { fetchLessons } from '../actions/lessons';\nimport { authFail } from '../actions/current_user';\nimport NewLessonForm from './newLessonForm';\n\n\nclass StudentLessons extends React.Component{\n\n    state = {\n        addLessonForm: false\n    }\n\n    render(){\n        return(\n            <div>\n                <Divider/>\n                <Header as='h2' textAlign='center'>\n                    <Header.Content>Lessons</Header.Content><br/>\n                    <Button onClick={()=> this.setState({ addLessonForm: !this.state.addLessonForm })}>{this.state.addLessonForm ? 'Hide Form' : 'Add a Lesson'}</Button>\n                </Header>\n\n                {this.state.addLessonForm ? <NewLessonForm/> : null}\n\n                <Table celled>\n\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Time</Table.HeaderCell>\n                            <Table.HeaderCell>Status</Table.HeaderCell>\n                            <Table.HeaderCell>Instructor</Table.HeaderCell>\n                            <Table.HeaderCell>Instructor Notes</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {this.props.lessons.map( lesson =>{\n                            let {day, start_time, end_time} = lesson.class_time\n                            return (\n                                <Table.Row key={lesson.id}>\n                                    <Table.Cell><Link to={`/lessons/${lesson.id}`}>{day} | {start_time}-{end_time} | {lesson.instrument}</Link></Table.Cell>\n                                    <Table.Cell>{lesson.active ? \"Active\" : \"Inactive\"}</Table.Cell>\n                                    <Table.Cell>\n                                        <Link to={`/instructors/${lesson.instructor.id}`}>\n                                            {lesson.instructor.first_name} {lesson.instructor.last_name}\n                                        </Link>\n                                    </Table.Cell>\n                                    <Table.Cell>{lesson.instructor_notes}</Table.Cell>\n                                </Table.Row>\n                            )\n                        })}\n                    </Table.Body>\n                </Table>\n                <Divider/>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        fetch(`http://localhost:5000/lessons/student_${this.props.student_id}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(lessons => {\n            lessons.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchLessons(lessons))\n        })\n    }\n\n}\n\nconst mapStateToProps = state =>(\n    {\n        lessons: state.lessons,\n        student_id: state.desiredStudent.id\n    }\n)\n\n\nexport default connect(mapStateToProps)(StudentLessons);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header, Icon, Form, Button, Divider, Message } from 'semantic-ui-react';\nimport { fetchDesiredStudent, updateDesiredStudent } from '../actions/students';\nimport { authFail } from '../actions/current_user';\nimport { Link } from 'react-router-dom';\nimport StudentLessons from '../components/studentLessons';\n\nclass StudentPage extends React.Component{\n\n    state={\n        old_student:{},\n        success: false,\n        showLessons: false\n    }\n\n    handleChange = (key,info) => this.props.dispatch(updateDesiredStudent(key,info))\n    handleSubmit = () => {\n        fetch(`http://localhost:5000/students/${this.props.student.id}`,{\n            method:\"PATCH\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(this.props.student)\n        })\n        .then(r=>r.json())\n        .then( student =>{\n            this.setState({\n                success: true,\n                old_student: student\n            })\n            this.intervalID = setInterval(() => {\n                this.setState({\n                    success: false\n                })\n            }, 1000);\n        })\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n        let {first_name,last_name, phone_number, email, date_of_birth, misc_notes, medical_notes, billing_notes, family_id} = this.props.student\n\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='headphones' />\n                    <Header.Content>{this.state.old_student.first_name} {this.state.old_student.last_name}</Header.Content>\n                    <Link to={`/families/${family_id}`} ><Button>Go to Family Page</Button></Link>\n                    <Button onClick={()=> this.setState({ showLessons: !this.state.showLessons })}>{this.state.showLessons ? 'Hide' : 'Show'} Lessons</Button>\n                </Header>\n\n                {this.state.showLessons ? <StudentLessons /> : <Divider/>}\n\n                <Form success style={{margin: '10px'}} onSubmit={()=>this.handleSubmit}>\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid label='First name' value={first_name} onChange={(e)=>this.handleChange('first_name',e.target.value)}/>\n                        <Form.Input fluid label='Last name' value={last_name} onChange={(e)=>this.handleChange('last_name',e.target.value)}/>\n                        <Form.Input fluid label='Date of birth' type='date' value={date_of_birth} onChange={(e)=>this.handleChange('date_of_birth',e.target.value)}/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid label='Phone Number' type='text' value={phone_number} onChange={(e)=>this.handleChange('phone_number',e.target.value)}/>\n                        <Form.Input fluid label='Email' type='email' value={email} onChange={(e)=>this.handleChange('email',e.target.value)}/>\n                    </Form.Group>\n                    <Form.TextArea label='Medical Notes' value={medical_notes} onChange={(e)=>this.handleChange('medical_notes',e.target.value)}></Form.TextArea>\n                    <Form.TextArea label='Billing Notes' value={billing_notes} onChange={(e)=>this.handleChange('billing_notes',e.target.value)}></Form.TextArea>\n                    <Form.TextArea label='Miscellaneous Notes' value={misc_notes} onChange={(e)=>this.handleChange('misc_notes',e.target.value)}></Form.TextArea>\n                    <Button type='submit' onClick={this.handleSubmit}>Save Changes</Button>\n                    <Button onClick={()=> this.props.dispatch(fetchDesiredStudent(this.state.old_student))}>Revert Changes</Button>\n                    {this.state.success ? <Message success header='Changes have been saved' /> : null}\n                </Form>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        let id = window.location.href.split(\"/\").pop()\n        fetch(`http://localhost:5000/students/${id}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(student => {\n            this.setState({ old_student: student })\n            student.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchDesiredStudent(student))\n        })\n    }\n}\n\nexport default connect(state => ({ student: state.desiredStudent }))(StudentPage);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom'\nimport { authFail } from '../actions/current_user';\n\nclass NewInstructorForm extends React.Component{\n\n    state={\n        school_ids: [],\n        submitted: false,\n        instructor_id: \"\"\n    }\n\n    handleSubmit(info){\n        if(this.state.school_ids.length <= 0){\n            alert(\"Please select at least one school\")\n        }else{\n            let keys = [\n                'first_name',\n                'last_name',\n                'date_of_birth',\n                'billing_address',\n                'pay_rate',\n                'phone_number',\n                'emergency_number',\n                'email','instrument_1',\n                'instrument_2',\n                'instrument_3',\n                'biography',\n                'misc_notes'\n            ]\n            \n            let newInstructorInfo = { active: true , schools: this.state.school_ids }\n            keys.forEach( key => newInstructorInfo[key]=info[key].value )\n            \n            fetch('http://localhost:5000/instructors',{\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/json',\n                    'Authorization': localStorage.getItem('token')\n                },\n                body: JSON.stringify(newInstructorInfo)\n            })\n            .then(r=>r.json())\n            .then(instructor =>{\n                if(instructor.error){\n                    this.props.dispatch(authFail())\n                }else{\n                    alert(\"The instructor has been added. Confirm to redirect to the instructor's information\")\n                    this.setState({ submitted: true, instructor_id: instructor.id })\n                }\n            })\n        }\n    }\n\n    render(){\n\n        let schoolOptions = this.props.currentUser.schools.map( school => ({key:school.id, value:school.id, text:school.name}))\n\n        return(<div>\n\n            {this.state.submitted ? <Redirect to={`/instructors/${this.state.instructor_id}`}/> : null}\n\n            <Form success style={{margin: '10px'}} onSubmit={(e)=>this.handleSubmit(e.target)}>\n                    <Form.Group widths='equal'>\n                        <Form.Input id='first_name' required fluid label='First name'/>\n                        <Form.Input id='last_name' required fluid label='Last name'/>\n                        <Form.Input id='date_of_birth' defaultValue='2000-01-01' required fluid label='Date of birth' type='date'/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input id='billing_address' fluid label='Billing Address' />\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Select\n                            id='schools'\n                            required\n                            multiple\n                            value={this.state.school_ids}\n                            options={schoolOptions}\n                            label='Schools'\n                            onChange={ (e,d) => this.setState({ school_ids: d.value }) }\n                        />\n                        <Form.Input id='pay_rate' defaultValue={0} fluid label='Pay Rate' type=\"number\"/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input id='phone_number' required fluid label='Phone Number' type='text'/>\n                        <Form.Input id='emergency_number' fluid label='Emergency Number' type='tel'/>\n                        <Form.Input id='email' required fluid label='Email' type='email'/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input id='instrument_1' required fluid label='Instrument 1' />\n                        <Form.Input id='instrument_2' fluid label='Instrument 2' />\n                        <Form.Input id='instrument_3' fluid label='Instrument 3' />\n                    </Form.Group>\n                    <Form.TextArea id='biography' label='Biography' ></Form.TextArea>\n                    <Form.TextArea id='misc_notes' label='Miscellaneous Notes' ></Form.TextArea>\n                    <Button type='submit'>Add Instructor</Button>\n                </Form>\n        </div>)\n    }\n}\n\nconst mapStateToProps = state =>(\n    {\n        currentUser: state.currentUser\n    }\n)\n\nexport default connect(mapStateToProps)(NewInstructorForm);","import React from 'react'\nimport { connect } from 'react-redux';\nimport { fetchInstructors } from '../actions/instructors'\nimport { authFail } from '../actions/current_user';\nimport { Header, Icon, Table, Button, Search } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport NewInstructorForm from '../components/newInstructorForm';\nimport debounce from 'lodash.debounce'\n\n\nclass Instructors extends React.Component{\n\n    state={\n        newForm: false,\n        searchQuery: \"\",\n        isLoading: false\n    }\n\n    setSearchQuery = debounce((query) => {\n        this.setState({ searchQuery: query, isLoading: false })\n    }, 500)\n\n    componentDidMount(){\n        this.props.initialFetch()\n    }\n\n    render(){\n\n        let desiredInstructors = this.props.instructors\n        if(this.state.searchQuery !== \"\"){\n            let searchTerm = this.state.searchQuery.toUpperCase()\n            desiredInstructors = this.props.instructors.filter( instructor =>(\n                instructor.first_name.toUpperCase().includes(searchTerm) || \n                instructor.last_name.toUpperCase().includes(searchTerm) ||\n                instructor.instrument_1.toUpperCase().includes(searchTerm) ||\n                instructor.instrument_2.toUpperCase().includes(searchTerm) ||\n                instructor.instrument_3.toUpperCase().includes(searchTerm)\n            ))\n        }\n\n\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='microphone' />\n                    <Header.Content>Instructors</Header.Content>\n                    <Button onClick={()=> this.setState({ newForm: !this.state.newForm })}>{this.state.newForm ? 'Return to Instructors List' : 'Add Instructor'}</Button>\n                </Header>\n\n                {\n                    this.state.newForm ? \n                    null : \n                    <Search\n                        open={false}\n                        loading={this.state.isLoading}\n                        size='small'\n                        style={{ marginLeft: '10px'}}\n                        placeholder='Name or Instrument'\n                        onSearchChange={(e)=>{\n                            this.setState({ isLoading: true })\n                            this.setSearchQuery(e.target.value)\n                        }}\n                    />\n                }\n\n                {\n                    this.state.newForm ?\n\n                    <NewInstructorForm/> :\n\n                    <Table celled>\n\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Schools</Table.HeaderCell>\n                                <Table.HeaderCell>Active</Table.HeaderCell>\n                                <Table.HeaderCell>Instruments</Table.HeaderCell>\n                                <Table.HeaderCell>Phone Number</Table.HeaderCell>\n                                <Table.HeaderCell>Emergancy Number</Table.HeaderCell>\n                                <Table.HeaderCell>Email</Table.HeaderCell>\n                                <Table.HeaderCell>Date of Birth</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {desiredInstructors.map( instructor =>(\n                                <Table.Row key={instructor.id}>\n                                    <Table.Cell><Link to={`/instructors/${instructor.id}`} >{instructor.first_name} {instructor.last_name}</Link></Table.Cell>\n                                    <Table.Cell>{instructor.schools.map( school=> (\n                                                <div key={school.id}>\n                                                    {school.name}\n                                                    <br/>\n                                                </div>\n                                            )\n                                    )}</Table.Cell>\n                                    <Table.Cell>{instructor.active ? \"Active\": \"Inactive\"}</Table.Cell>\n                                    <Table.Cell>\n                                        {instructor.instrument_1}<br/>\n                                        {instructor.instrument_2 ? instructor.instrument_2 : null}<br/>\n                                        {instructor.instrument_3 ? instructor.instrument_3 : null}\n                                    </Table.Cell>\n                                    <Table.Cell>{instructor.phone_number}</Table.Cell>\n                                    <Table.Cell>{instructor.emergency_number}</Table.Cell>\n                                    <Table.Cell>{instructor.email}</Table.Cell>\n                                    <Table.Cell>{instructor.date_of_birth}</Table.Cell>\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n                    </Table>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>(\n    {\n        instructors: state.instructors\n    }\n)\n\nconst mapDispatchToProps = {\n    initialFetch: ()=>dispatch=>{\n        fetch('http://localhost:5000/instructors',{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(instructors => {\n            instructors.error ? dispatch(authFail()) : dispatch(fetchInstructors(instructors))\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Instructors);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Divider, Message } from 'semantic-ui-react';\nimport { authFail } from '../actions/current_user';\nimport { addDesiredClassTime } from '../actions/class_times';\n\nclass NewClassTimeForm extends React.Component{\n\n    state={\n        submitted: false,\n        school_id: null,\n        day: null\n    }\n\n    handleSubmit(info){\n\n        if(!this.state.school_id){\n            alert(\"Please select a school\")\n        }else if(!this.state.day){\n            alert(\"Please select a day\")\n        }else{\n\n            let classTimeInfo = {\n                instructor_id: this.props.instructor.id,\n                start_time: info.start_time.value,\n                end_time: info.end_time.value,\n                active: true,\n                day: this.state.day,\n                school_id: this.state.school_id\n            }\n            \n            fetch('http://localhost:5000/class_times',{\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/json',\n                    'Authorization': localStorage.getItem('token')\n                },\n                body: JSON.stringify(classTimeInfo)\n            })\n            .then(r=>r.json())\n            .then(class_time =>{\n                if(class_time.error){\n                    this.props.dispatch(authFail())\n                }else{\n                    this.props.dispatch(addDesiredClassTime(class_time))\n                    this.setState({ submitted: true })\n                    this.intervalID = setInterval( ()=>(\n                        this.setState({ submitted: false })\n                    ),3000)\n                }\n            })\n        }\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n\n        let schoolOptions = this.props.currentUser.schools.map( school => ({key:school.id, value:school.id, text:school.name}))\n        let dayNames = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n        let dayOptions = dayNames.map( day => ({key: dayNames.indexOf(day), value: day, text: day}))\n        return(<div>\n            <Divider />\n            <Form success style={{margin: '10px'}} onSubmit={(e)=>this.handleSubmit(e.target)}>\n                    \n                <Form.Group widths='equal'>\n                    <Form.Select\n                        id='school'\n                        required\n                        options={schoolOptions}\n                        value={this.state.school_id}\n                        label='Schools'\n                        onChange={(e,d)=>{\n                            this.setState({ school_id: d.value })\n                        }}\n                    />\n                    <Form.Select\n                        id='day'\n                        required \n                        options={dayOptions}\n                        value={this.state.day}\n                        label='Day'\n                        onChange={(e,d)=>{\n                            this.setState({ day: d.value })\n                        }}\n                    />\n                    <Form.Input id='start_time' required type='time' fluid label='Start Time' />\n                    <Form.Input id='end_time' required type='time' fluid label='End Time' />\n                </Form.Group>\n                \n                <Button type='submit'>Add Class Time</Button>\n                {this.state.submitted ? <Message success header='Class time has been added' /> : null}\n            </Form>\n            <Divider />\n        </div>)\n    }\n}\n\nconst mapStateToProps = state => (\n    {\n        currentUser: state.currentUser,\n        instructor: state.desiredInstructor\n    }\n)\n\n\nexport default connect(mapStateToProps)(NewClassTimeForm);","export function fetchDesiredClassTimes(class_times){\n    return {type: \"FETCH_DESIRED_CLASSTIMES\", class_times}\n}\n\nexport function updateDesiredClassTime(class_time){\n    return {type: \"UPDATE_DESIRED_CLASSTIME\", class_time}\n}\n\nexport function addDesiredClassTime(class_time){\n    return {type: \"ADD_DESIRED_CLASSTIME\", class_time}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Header, Table, Divider, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport { fetchDesiredClassTimes, updateDesiredClassTime } from '../actions/class_times';\nimport { authFail } from '../actions/current_user';\nimport NewClassTimeForm from './newClassTimeForm';\n\n\nclass InstructorSchedule extends React.Component{\n\n    state = {\n        active: true,\n        classForm: false\n    }\n\n    handleActive = (id) =>{\n        let desiredTime = this.props.class_times.find( time => time.id === id)\n        if(desiredTime){\n            if(desiredTime.active && desiredTime.lessons.length !== 0 && desiredTime.lessons.some( lesson => lesson.active)){\n                let checker = window.confirm(\"Are you sure you want to set this class to Inactive? There is at least 1 lesson in the class. If this time is set to inative, all lessons in this time will be set to inactive.\")\n                if(checker){\n                    this.props.runFetch(desiredTime)\n                }\n            }else{\n                this.props.runFetch(desiredTime)\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.props.initialFetch(this.props.instructor_id)\n    }\n\n    render(){\n        let desiredTimes = []\n        this.state.active ?\n        desiredTimes = this.props.class_times.filter( time => time.active ) :\n        desiredTimes = this.props.class_times.filter( time => !time.active )\n        return(\n            <div>\n                <Divider/>\n                <Header as='h2' textAlign='center'>\n                    <Header.Content>Schedule</Header.Content><br/>\n                    <Button onClick={()=> this.setState({ active: !this.state.active })}>Show {this.state.active ? 'Inactive' : 'Active'} Class Times</Button>\n                    <Button onClick={()=> this.setState({ classForm: !this.state.classForm })}>{this.state.classForm ? 'Hide Form' : 'Add a Class Time'}</Button>\n                </Header>\n\n                {this.state.classForm ? <NewClassTimeForm/> : null}\n\n                <Table celled>\n\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Time</Table.HeaderCell>\n                            <Table.HeaderCell>Students</Table.HeaderCell>\n                            <Table.HeaderCell>Primary Contact</Table.HeaderCell>\n                            <Table.HeaderCell>Notes</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {desiredTimes.map( classTime =>{\n                            let {start_time, end_time} = classTime\n                            let longStart = start_time.split(\"T\")[1]\n                            let shortStart = `${longStart.split(\":\")[0]}:${longStart.split(\":\")[1]}`\n\n                            let longEnd = end_time.split(\"T\")[1]\n                            let shortEnd = `${longEnd.split(\":\")[0]}:${longEnd.split(\":\")[1]}`\n\n                            let desiredStudents = classTime.students.filter( student =>{\n                                let lesson = classTime.lessons.find( lesson => lesson.student_id === student.id)\n                                return lesson.active\n                            })\n\n                            let desiredContacts = classTime.contacts.filter( contact =>{\n                                let student = classTime.students.find( student => student.family_id === contact.family_id)\n                                let lesson = classTime.lessons.find( lesson => lesson.student_id === student.id)\n                                return lesson.active\n                            })\n\n                            let desiredLessons = classTime.lessons.filter( lesson => lesson.active)\n\n                            return (\n                                <Table.Row key={classTime.id}>\n                                    <Table.Cell>\n                                        {classTime.day} | {classTime.school.name} | {shortStart}-{shortEnd} <Button onClick={()=>this.handleActive(classTime.id)}>Set to {classTime.active ? 'Inactive' : 'Active'}</Button>\n                                    </Table.Cell>\n                                    <Table.Cell>{\n                                        desiredStudents.map( student =>{\n                                        let lesson = classTime.lessons.find( lesson => lesson.student_id === student.id)\n                                        let {first_name,last_name} = student\n\n                                        return(\n                                            <div key={student.id}>\n                                            <Link to={`/students/${student.id}`}>{first_name} {last_name}</Link> | <Link to={`/lessons/${lesson.id}`}>Lesson Details</Link>\n                                            {classTime.students[classTime.students.length-1].id === student.id ? <br/> : <Divider/>}\n                                        </div>\n                                        )\n                                    })}</Table.Cell>\n                                    <Table.Cell>{desiredContacts.map( contact => {\n                                        let {first_name,last_name, phone_number, email} = contact\n                                        return(\n                                            <Link to={`/contacts/${contact.id}`} key={contact.id}>\n                                                {first_name} {last_name}\n                                                <br/>\n                                                {phone_number}ß\n                                                <br/>\n                                                {email}\n                                                <br/>\n                                                {classTime.contacts[classTime.contacts.length-1].id === contact.id ? <br/> : <Divider/>}\n                                            </Link>\n                                        )\n                                    })}</Table.Cell>\n                                    <Table.Cell>{desiredLessons.map( lesson => {\n                                        return(\n                                            <div key={lesson.id}>\n                                                {lesson.instructor_notes}\n                                                {classTime.lessons[classTime.lessons.length-1].id === lesson.id ? <br/> : <Divider/>}\n                                            </div>\n                                        )\n                                    })}</Table.Cell>\n                                </Table.Row>\n                            )\n                        })}\n                    </Table.Body>\n                </Table>\n                <Divider/>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state =>(\n    {\n        class_times: state.desiredClassTimes,\n        instructor_id: state.desiredInstructor.id\n    }\n)\n\nconst mapDispatchToProps = {\n    initialFetch: (instructor_id)=>dispatch=>{\n        fetch(`http://localhost:5000/class_times/${instructor_id}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(class_times => {\n            class_times.error ? dispatch(authFail()) : dispatch(fetchDesiredClassTimes(class_times))\n        })\n    },\n    runFetch: (desiredTime) => dispatch => {\n        fetch(`http://localhost:5000/class_times/${desiredTime.id}`,{\n            method:\"PATCH\",\n            headers: {\n            'Content-Type':'application/json',\n            'Authorization': localStorage.getItem('token')\n        },\n        body: JSON.stringify({ active: !desiredTime.active})\n        })\n        .then(r=>r.json())\n        .then(class_time =>{\n            if(class_time.error){\n                dispatch(authFail())\n            }else{\n                dispatch(updateDesiredClassTime(class_time))\n            }\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstructorSchedule);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header, Icon, Form, Button, Divider, Message } from 'semantic-ui-react';\nimport { fetchDesiredInstructor, updateDesiredInstructor } from '../actions/instructors';\nimport { authFail } from '../actions/current_user';\nimport { Link } from 'react-router-dom'\nimport InstructorSchedule from '../components/instructorSchedule'\n\nclass InstructorPage extends React.Component{\n\n    state={\n        old_instructor:{},\n        success: false,\n        schedule: false\n    }\n\n    runFetch = () =>{\n        fetch(`http://localhost:5000/instructors/${this.props.instructor.id}`,{\n            method:\"PATCH\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(this.props.instructor)\n        })\n        .then(r=>r.json())\n        .then( instructor =>{\n            this.setState({\n                success: true,\n                old_instructor: instructor\n            })\n            this.intervalID = setInterval(() => {\n                this.setState({\n                    success: false\n                })\n            }, 1000);\n        })\n    }\n\n    handleChange = (key,info) => this.props.dispatch(updateDesiredInstructor(key,info))\n    handleSubmit = (info) => {\n        if(this.state.old_instructor.active && !this.props.instructor.active){\n            let checker = window.confirm(\"Are you sure you want to set this Instructor to Inactive? All class times and lessons associated with this instructor will be set to inactive.\")\n            if(checker){\n                this.runFetch()\n            }\n        }else{\n            this.runFetch()\n        }\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n        let {first_name,last_name, instrument_1, instrument_2, instrument_3, phone_number, emergency_number, email, date_of_birth, billing_address, pay_rate, active, biography, misc_notes, schools} = this.props.instructor\n        let schoolOptions = []\n        if(this.props.currentUser.authorized){\n            schoolOptions = this.props.currentUser.schools.map( school => ({key:school.id, value:school.id, text:school.name}))\n        }\n\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='microphone' />\n                    <Header.Content>{this.state.old_instructor.first_name} {this.state.old_instructor.last_name}</Header.Content>\n                    <Link to='/instructors' ><Button>Go to Instructors</Button></Link>\n                    <Button onClick={()=> this.setState({ schedule: !this.state.schedule })}>{this.state.schedule ? 'Hide' : 'Show'} Schedule</Button>\n                </Header>\n\n                {this.state.schedule ? <InstructorSchedule /> : <Divider/>}\n\n                <Form success style={{margin: '10px'}} onSubmit={(e)=> this.handleSubmit(e)}>\n                    <Form.Group widths='equal'>\n                        <Form.Input required fluid label='First name' value={first_name} onChange={(e)=>this.handleChange('first_name',e.target.value)}/>\n                        <Form.Input required fluid label='Last name' value={last_name} onChange={(e)=>this.handleChange('last_name',e.target.value)}/>\n                        <Form.Input required fluid label='Date of birth' type='date' value={date_of_birth} onChange={(e)=>this.handleChange('date_of_birth',e.target.value)}/>\n                    </Form.Group>\n                    <Form.Input fluid label='Billing Address' value={billing_address} onChange={(e)=>this.handleChange('billing_address',e.target.value)}/>\n                    <Form.Group widths='equal'>\n                        <Form.Dropdown\n                            required \n                            multiple\n                            selection\n                            options={schoolOptions}\n                            value={schools.map( school => school.id)}\n                            label=\"Schools\"\n                            onChange={(e,d)=>{\n                                let desiredSchools = this.props.currentUser.schools.filter( school => d.value.includes(school.id))\n                                this.handleChange('schools',desiredSchools)\n                            }}\n                        />\n                        <Form.Input fluid label='Pay Rate' type=\"number\" value={pay_rate} onChange={(e)=>this.handleChange('pay_rate',e.target.value)}/>\n                        <Form.Dropdown\n                            required \n                            selection\n                            options={[\n                                { key: 1, value: true, text: \"Active\" },\n                                { key: 2, value: false, text: \"Inactive\" }\n                            ]}\n                            value={active}\n                            label=\"Status\"\n                            onChange={(e,d)=>{\n                                this.handleChange('active',d.value)\n                            }}\n                        />\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input required fluid label='Phone Number' type='text' value={phone_number} onChange={(e)=>this.handleChange('phone_number',e.target.value)}/>\n                        <Form.Input fluid label='Emergency Number' type='tel' value={emergency_number} onChange={(e)=>this.handleChange('emergency_number',e.target.value)}/>\n                        <Form.Input required fluid label='Email' type='email' value={email} onChange={(e)=>this.handleChange('email',e.target.value)}/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input required fluid label='Instrument 1' value={instrument_1} onChange={(e)=>this.handleChange('instrument_1',e.target.value)}/>\n                        <Form.Input fluid label='Instrument 2' value={instrument_2} onChange={(e)=>this.handleChange('instrument_2',e.target.value)}/>\n                        <Form.Input fluid label='Instrument 3' value={instrument_3} onChange={(e)=>this.handleChange('instrument_3',e.target.value)}/>\n                    </Form.Group>\n                    <Form.TextArea label='Biography' value={biography} onChange={(e)=>this.handleChange('biography',e.target.value)}></Form.TextArea>\n                    <Form.TextArea label='Miscellaneous Notes' value={misc_notes} onChange={(e)=>this.handleChange('misc_notes',e.target.value)}></Form.TextArea>\n                    <Button type='submit'>Save Changes</Button>\n                    <Button onClick={()=> this.props.dispatch(fetchDesiredInstructor(this.state.old_instructor))}>Revert Changes</Button>\n                    {this.state.success ? <Message success header='Changes have been saved' /> : null}\n                </Form>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        let id = window.location.href.split(\"/\").pop()\n        fetch(`http://localhost:5000/instructors/${id}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(instructor => {\n            this.setState({ old_instructor:instructor })\n            instructor.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchDesiredInstructor(instructor))\n        })\n    }\n}\n\nexport default connect(state => ({ instructor: state.desiredInstructor, currentUser: state.currentUser }))(InstructorPage);","export function fetchFamilies(families){\n    return {type: \"FETCH_FAMILIES\", families}\n}\n\nexport function fetchDesiredFamily(family){\n    return {type: \"FETCH_DESIRED_FAMILY\", family}\n}\n\nexport function updateDesiredFamily(key,value){\n    return {type: \"FAMILY_ONCHANGE\", key, value}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom'\nimport { authFail } from '../actions/current_user';\n\nclass NewFamilyForm extends React.Component{\n\n    state={\n        submitted: false,\n        family_id: \"\",\n        school_id: null\n    }\n\n    handleSubmit(info){\n\n        if(!this.state.school_id){\n            alert(\"Please select a school\")\n        }else{\n\n            let familyInfo = {\n                family_name: info.family_name.value,\n                school_id: this.state.school_id,\n                misc_notes: \"\",\n                billing_total: 0\n            }\n            \n            fetch('http://localhost:5000/families',{\n                method: 'POST',\n                headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n                },\n                body: JSON.stringify(familyInfo)\n            })\n            .then(r=>r.json())\n            .then(family =>{\n                family.error ? this.props.dispatch(authFail()) : this.setState({ submitted: true, family_id: family.id })\n            })\n        }\n    }\n    \n    render(){\n\n        let schoolOptions = this.props.currentUser.schools.map( school => ({key:school.id, value:school.id, text:school.name}))\n\n        return(<div>\n\n            {this.state.submitted ? <Redirect to={`/families/${this.state.family_id}`}/> : null}\n\n            <Form success style={{margin: '10px'}} onSubmit={(e)=>this.handleSubmit(e.target)}>\n                    \n                <Form.Group widths='equal'>\n                    <Form.Select\n                        id='schools'\n                        required\n                        options={schoolOptions}\n                        value={this.state.school_id}\n                        label='Schools'\n                        onChange={ (e,d) => this.setState({ school_id: d.value })}\n                    />\n                    <Form.Input id='family_name' required fluid label='Family Name' />\n                </Form.Group>\n                \n                <Button type='submit'>Add Family</Button>\n            </Form>\n        </div>)\n    }\n}\n\nconst mapStateToProps = state =>(\n    {\n        currentUser: state.currentUser\n    }\n)\n\nexport default connect(mapStateToProps)(NewFamilyForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchFamilies } from '../actions/families';\nimport { authFail } from '../actions/current_user';\nimport { Header, Icon, Table, Button, Search } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport NewFamilyForm from '../components/newFamilyForm';\nimport debounce from 'lodash.debounce'\n\n\nclass Families extends React.Component{\n\n    state={\n        newForm: false,\n        searchQuery: \"\",\n        isLoading: false\n    }\n\n    setSearchQuery = debounce((query) => {\n        this.setState({ searchQuery: query, isLoading: false })\n    }, 500)\n\n    render(){\n\n        let desiredFamiles = this.props.families\n        if(this.state.searchQuery !== \"\"){\n            let searchTerm = this.state.searchQuery.toUpperCase()\n            desiredFamiles = this.props.families.filter( family =>(\n                family.family_name.toUpperCase().includes(searchTerm)\n            ))\n        }\n\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='group' />\n                    <Header.Content>Families</Header.Content>\n                    <Button onClick={()=> this.setState({ newForm: !this.state.newForm })}>{this.state.newForm ? 'Hide Family Form' : 'Add a Family'}</Button>\n                </Header>\n\n                {this.state.newForm ? <NewFamilyForm/> : null}\n\n                <Search\n                    open={false}\n                    loading={this.state.isLoading}\n                    size='small'\n                    style={{ marginLeft: '10px' }}\n                    placeholder='Family Name'\n                    onSearchChange={(e)=>{\n                        this.setState({ isLoading: true })\n                        this.setSearchQuery(e.target.value)\n                    }}\n                />\n\n                <Table celled>\n\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Family Name</Table.HeaderCell>\n                            <Table.HeaderCell>Contacts</Table.HeaderCell>\n                            <Table.HeaderCell>Students</Table.HeaderCell>\n                            <Table.HeaderCell>School</Table.HeaderCell>\n                            <Table.HeaderCell>Billing Total</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {desiredFamiles.map( family =>(\n                            <Table.Row key={family.id}>\n                                <Table.Cell><Link to={`/families/${family.id}`} >{family.family_name}</Link></Table.Cell>\n                                <Table.Cell>{family.contacts.map( contact => (\n                                    <Link to={`/contacts/${contact.id}`} key={contact.id} >{\n                                        family.contacts[family.contacts.length - 1].id === contact.id ?\n                                        `${contact.first_name} ${contact.last_name}` :\n                                        `${contact.first_name} ${contact.last_name}, `\n                                    }</Link>\n                                ))}</Table.Cell>\n                                <Table.Cell>{family.students.map( student => (\n                                    <Link to={`/students/${student.id}`} key={student.id}>{\n                                        family.students[family.students.length - 1].id === student.id ?\n                                        `${student.first_name} ${student.last_name}` :\n                                        `${student.first_name} ${student.last_name}, `\n                                    }</Link>\n                                ))}</Table.Cell>\n                                <Table.Cell>{family.school.name}</Table.Cell>\n                                <Table.Cell>{family.billing_total}</Table.Cell>\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                </Table>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:5000/families',{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        //give error option for everything?\n        .then(r=> r.status===200 ? r.json() : console.log('error'))\n        .then(families => {\n            if(families){\n                families.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchFamilies(families))\n            }else{\n                alert(\"There was an error retrieving the date. If this persists, please contact customer support\")\n            }\n        })\n    }\n}\n\nexport default connect(state => ({ families: state.families }))(Families);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Message, Divider } from 'semantic-ui-react';\nimport { authFail } from '../actions/current_user';\nimport { updateDesiredFamily } from '../actions/families';\n\nclass NewContactForm extends React.Component{\n\n    state={\n        submitted: false\n    }\n\n    handleSubmit(info){\n        let keys = ['first_name','last_name','relation_to_students','billing_address','phone_number','emergency_number','email']\n        let newContactInfo = { family_id: this.props.family.id, school_id: this.props.family.school_id }\n        keys.forEach( key => newContactInfo[key]=info[key].value )\n\n        fetch('http://localhost:5000/contacts',{\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(newContactInfo)\n        })\n        .then(r=>r.json())\n        .then(contact =>{\n            if(contact.error){\n                this.props.dispatch(authFail())\n            }else{\n                this.props.dispatch(updateDesiredFamily('contacts',[...this.props.family.contacts, contact]))\n                this.setState({ submitted: true })\n                this.intervalID = setInterval(() => {\n                    this.setState({ submitted: false })\n                }, 3000)\n            }\n        })\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n\n        return(<div>\n            <Divider/>\n            <Form success style={{margin: '10px'}} onSubmit={(e)=>this.handleSubmit(e.target)}>\n                    \n                <Form.Group widths='equal'>\n                    <Form.Input id='first_name' required fluid label='First Name' />\n                    <Form.Input id='last_name' required fluid label='Last Name' />\n                    <Form.Input id='relation_to_students' required fluid label='Relation to Students' />\n                </Form.Group>\n                <Form.Input id='billing_address' fluid label='Billing Address' />\n                <Form.Group widths='equal'>\n                    <Form.Input id='phone_number' required fluid label='Phone Number' />\n                    <Form.Input id='emergency_number' fluid label='Emergency Number' />\n                    <Form.Input id='email' required fluid label='Email' />\n                </Form.Group>\n                <Button type='submit'>Add Contact</Button>\n                {this.state.submitted ? <Message success header='Contact has been added' /> : null}\n            </Form>\n            <Divider/>\n        </div>)\n    }\n}\n\nconst mapStateToProps = state => (\n    {\n        currentUser: state.currentUser,\n        family: state.desiredFamily\n    }\n)\n\nexport default connect(mapStateToProps)(NewContactForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Message, Divider } from 'semantic-ui-react';\nimport { authFail } from '../actions/current_user';\nimport { updateDesiredFamily } from '../actions/families';\n\nclass NewStudentForm extends React.Component{\n\n    state={\n        submitted: false\n    }\n\n    handleSubmit(info){\n        let keys = ['first_name','last_name','date_of_birth','phone_number','misc_notes', 'medical_notes', 'billing_notes']\n        let newStudentInfo = { family_id: this.props.family.id, school_id: this.props.family.school_id }\n        keys.forEach( key => newStudentInfo[key]=info[key].value )\n\n        fetch('http://localhost:5000/students',{\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(newStudentInfo)\n        })\n        .then(r=>r.json())\n        .then(student =>{\n            if(student.error){\n                this.props.dispatch(authFail())\n            }else{\n                this.props.dispatch(updateDesiredFamily('students',[...this.props.family.students, student]))\n                this.setState({ submitted: true })\n                this.intervalID = setInterval(() => {\n                    this.setState({\n                        submitted: false\n                    })\n                }, 2000);\n            }\n        })\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n        return(<div>\n            <Divider/>\n            <Form success style={{margin: '10px'}} onSubmit={(e)=>this.handleSubmit(e.target)}>\n                    \n                <Form.Group widths='equal'>\n                    <Form.Input id='first_name' required fluid label='First Name' />\n                    <Form.Input id='last_name' required fluid label='Last Name' />\n                    <Form.Input id='date_of_birth' type='date' required fluid label='Date of Birth' />\n                    <Form.Input id='phone_number' fluid label='Phone Number' />\n                </Form.Group>\n                <Form.TextArea id='billing_notes' label='Billing Notes'></Form.TextArea>\n                <Form.TextArea id='medical_notes' label='Medical Notes'></Form.TextArea>\n                <Form.TextArea id='misc_notes' label='Miscellaneous Notes'></Form.TextArea>\n\n                <Button type='submit'>Add Student</Button>\n\n                {this.state.success ? <Message success header='Student has been added' /> : null}\n\n            </Form>\n            <Divider/>\n        </div>)\n    }\n}\n\nconst mapStateToProps = state =>(\n    {\n        currentUser: state.currentUser,\n        family: state.desiredFamily\n    }\n)\nexport default connect(mapStateToProps)(NewStudentForm);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header, Icon, Form, Button, Divider, Message, Table } from 'semantic-ui-react';\nimport { fetchDesiredFamily,updateDesiredFamily } from '../actions/families';\nimport { authFail } from '../actions/current_user';\nimport { Link } from 'react-router-dom';\nimport NewContactForm from '../components/newContactForm';\nimport NewStudentForm from '../components/newStudentForm';\n\nclass FamilyPage extends React.Component{\n\n    state={\n        old_family:{},\n        success: false,\n        studentForm: false,\n        contactForm: false\n    }\n\n    handleChange = (key,info) => this.props.dispatch(updateDesiredFamily(key,info))\n    handleSubmit = () => {\n        fetch(`http://localhost:5000/families/${this.props.family.id}`,{\n            method:\"PATCH\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(this.props.family)\n        })\n        .then(r=>r.json())\n        .then( family =>{\n            this.setState({\n                success: true,\n                old_family: family\n            })\n            this.intervalID = setInterval(() => {\n                this.setState({\n                    success: false\n                })\n            }, 1000);\n        })\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n        let {family_name, students, contacts, misc_notes, lessons, class_times, instructors} = this.props.family\n\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='group' />\n                    <Header.Content>{this.state.old_family.family_name}</Header.Content>\n                    <Header.Subheader>{this.props.family.school.name}</Header.Subheader>\n                    <Link to=\"/families\"><Button>Go to Families</Button></Link>\n                </Header>\n\n                <Divider/>\n\n                <Header as='h2' textAlign='center'>\n                    <Header.Content>Contacts</Header.Content>\n                    <Button onClick={()=> this.setState({ contactForm: !this.state.contactForm })}>{this.state.contactForm ? 'View Current Contacts' : 'Add Contact'}</Button>\n                </Header>\n                {\n                    this.state.contactForm ?\n\n                    <NewContactForm/> :\n\n                    <Table celled>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Relation to Students</Table.HeaderCell>\n                                <Table.HeaderCell>Phone Number</Table.HeaderCell>\n                                <Table.HeaderCell>Email</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {contacts.map( contact =>(\n                                <Table.Row key={contact.id}>\n                                    <Table.Cell><Link to={`/contacts/${contact.id}`} >{contact.first_name} {contact.last_name}</Link></Table.Cell>\n                                    <Table.Cell>{contact.relation_to_students}</Table.Cell>\n                                    <Table.Cell>{contact.phone_number}</Table.Cell>\n                                    <Table.Cell>{contact.email}</Table.Cell>\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n                    </Table>\n                }\n\n\n                <Header as='h2' textAlign='center'>\n                    <Header.Content>Students</Header.Content>\n                    <Button onClick={()=> this.setState({ studentForm: !this.state.studentForm })}>{this.state.studentForm ? 'View Current Students' : 'Add Student'}</Button>\n                </Header>\n\n                {\n                    this.state.studentForm ?\n\n                    <NewStudentForm/> :\n\n                    <Table celled>\n\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Date of Birth</Table.HeaderCell>\n                                <Table.HeaderCell>Lessons</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {students.map( student =>(\n                                <Table.Row key={student.id}>\n                                    <Table.Cell><Link to={`/students/${student.id}`} >{student.first_name} {student.last_name}</Link></Table.Cell>\n                                    <Table.Cell>{student.date_of_birth}</Table.Cell>\n                                    <Table.Cell>{lessons.filter( lesson => lesson.student_id===student.id && lesson.active ).map( lesson => {\n                                        let {day, start_time, end_time, instructor_id} = class_times.find( class_time => class_time.id === lesson.class_time_id)\n                                        let longStart = start_time.split(\"T\")[1]\n                                        let shortStart = `${longStart.split(\":\")[0]}:${longStart.split(\":\")[1]}`\n\n                                        let longEnd = end_time.split(\"T\")[1]\n                                        let shortEnd = `${longEnd.split(\":\")[0]}:${longEnd.split(\":\")[1]}`\n                                        let instructor = instructors.find( instructor => instructor.id === instructor_id)\n                                        return (<div key={lesson.id}>\n                                            <Link to={`/lessons/${lesson.id}`}>{day} {shortStart}-{shortEnd}</Link> | {lesson.instrument} | <Link to={`/instructors/${instructor.id}`}>{instructor.first_name} {instructor.last_name}</Link>\n                                            <br/>\n                                        </div>)\n                                    })}</Table.Cell>\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n                    </Table>\n                }\n\n                <Form success style={{margin: '10px'}} onSubmit={()=>this.handleSubmit}>\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid label='Family Name' value={family_name} onChange={(e)=>this.handleChange('family_name',e.target.value)}/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                    </Form.Group>\n                    <Form.TextArea label='Miscellaneous Notes' value={misc_notes} onChange={(e)=>this.handleChange('misc_notes',e.target.value)}></Form.TextArea>\n                    <Button type='submit' onClick={this.handleSubmit}>Save Changes</Button>\n                    <Button onClick={()=> this.props.dispatch(fetchDesiredFamily(this.state.old_family))}>Revert Changes</Button>\n                    {this.state.success ? <Message success header='Changes have been saved' /> : null}\n                </Form>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        let id = window.location.href.split(\"/\").pop()\n        fetch(`http://localhost:5000/families/${id}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(family => {\n            this.setState({ old_family: family })\n            family.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchDesiredFamily(family))\n        })\n    }\n}\n\nexport default connect(state => ({ family: state.desiredFamily }))(FamilyPage);","export function fetchContacts(contacts){\n    return {type: \"FETCH_CONTACTS\", contacts}\n}\n\nexport function fetchDesiredContact(contact){\n    return {type: \"FETCH_DESIRED_CONTACT\", contact}\n}\n\nexport function updateDesiredContact(key,value){\n    return {type: \"CONTACT_ONCHANGE\", key, value}\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchContacts } from '../actions/contacts';\nimport { authFail } from '../actions/current_user';\nimport { Header, Icon, Table, Search } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport debounce from 'lodash.debounce'\n\nclass Contacts extends React.Component{\n\n    state={\n        searchQuery: \"\",\n        isLoading: false\n    }\n\n    setSearchQuery = debounce((query) => {\n        this.setState({ searchQuery: query, isLoading: false })\n    }, 500)\n\n    render(){\n        let organizedContacts = this.props.contacts.sort( (a,b)=> a.last_name > b.last_name ? 1 : a.last_name < b.last_name ? -1 : 0 )\n        if(this.state.searchQuery !== \"\"){\n            let searchTerm = this.state.searchQuery.toUpperCase()\n            organizedContacts = organizedContacts.filter( client =>(\n                client.first_name.toUpperCase().includes(searchTerm) || \n                client.last_name.toUpperCase().includes(searchTerm) ||\n                client.phone_number.toUpperCase().includes(searchTerm) ||\n                client.email.toUpperCase().includes(searchTerm) ||\n                client.family.family_name.toUpperCase().includes(searchTerm)\n            ))\n        }\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='phone' />\n                    <Header.Content>Contacts</Header.Content>\n                </Header>\n\n                <Search\n                    open={false}\n                    loading={this.state.isLoading}\n                    size='small'\n                    style={{ marginLeft: '10px' }}\n                    placeholder='Name, Number, or Email'\n                    onSearchChange={(e)=>{\n                        this.setState({ isLoading: true })\n                        this.setSearchQuery(e.target.value)\n                    }}\n                />\n                \n                <Table celled>\n\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Name</Table.HeaderCell>\n                            <Table.HeaderCell>Family Name</Table.HeaderCell>\n                            <Table.HeaderCell>Relation To Students</Table.HeaderCell>\n                            <Table.HeaderCell>Phone Number</Table.HeaderCell>\n                            <Table.HeaderCell>Email</Table.HeaderCell>\n                            <Table.HeaderCell>School</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {organizedContacts.map( contact =>(\n                            // This line should change once unique ids are put in\n                            <Table.Row key={contact.id}>\n                                <Table.Cell>{<Link to={`/contacts/${contact.id}`}>{contact.first_name} {contact.last_name}</Link>}</Table.Cell>\n                                <Table.Cell>{<Link to={`/families/${contact.family.id}`}>{contact.family.family_name}</Link>}</Table.Cell>\n                                <Table.Cell>{contact.relation_to_students}</Table.Cell>\n                                <Table.Cell>{contact.phone_number}</Table.Cell>\n                                <Table.Cell>{contact.email}</Table.Cell>\n                                <Table.Cell>{contact.school.name}</Table.Cell>\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                </Table>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:5000/contacts',{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(contacts => {\n            contacts.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchContacts(contacts))\n        })\n    }\n}\n\nexport default connect(state => ({ contacts: state.contacts }))(Contacts);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header, Icon, Form, Button, Divider, Message } from 'semantic-ui-react';\nimport { fetchDesiredContact, updateDesiredContact } from '../actions/contacts';\nimport { authFail } from '../actions/current_user';\nimport { Link } from 'react-router-dom'\n\nclass ContactPage extends React.Component{\n\n    state={\n        old_contact:{},\n        success: false\n    }\n\n    handleChange = (key,info) => this.props.dispatch(updateDesiredContact(key,info))\n    handleSubmit = () => {\n        fetch(`http://localhost:5000/contacts/${this.props.contact.id}`,{\n            method:\"PATCH\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(this.props.contact)\n        })\n        .then(r=>r.json())\n        .then( contact =>{\n            this.setState({\n                success: true,\n                old_contact: contact\n            })\n            this.intervalID = setInterval(() => {\n                this.setState({\n                    success: false\n                })\n            }, 1000);\n        })\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID)\n    }\n\n    render(){\n        let {first_name,last_name, relation_to_students, phone_number, emergency_number, email, billing_address, family_id} = this.props.contact\n\n        return(\n            <div>\n                <Header as='h2' icon textAlign='center'>\n                    <Icon name='phone' />\n                    <Header.Content>{this.state.old_contact.first_name} {this.state.old_contact.last_name}</Header.Content>\n                    <Link to={`/families/${family_id}`} ><Button>Go to Family Page</Button></Link>\n                </Header>\n\n                <Divider/>\n\n                <Form success style={{margin: '10px'}} onSubmit={()=>this.handleSubmit}>\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid label='First name' value={first_name} onChange={(e)=>this.handleChange('first_name',e.target.value)}/>\n                        <Form.Input fluid label='Last name' value={last_name} onChange={(e)=>this.handleChange('last_name',e.target.value)}/>\n                        <Form.Input fluid label='Relation to Students' value={relation_to_students} onChange={(e)=>this.handleChange('relation_to_students',e.target.value)}/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid label='Billing Address' value={billing_address} onChange={(e)=>this.handleChange('billing_address',e.target.value)}/>\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Input fluid label='Phone Number' type='text' value={phone_number} onChange={(e)=>this.handleChange('phone_number',e.target.value)}/>\n                        <Form.Input fluid label='Emergency Number' type='tel' value={emergency_number} onChange={(e)=>this.handleChange('emergency_number',e.target.value)}/>\n                        <Form.Input fluid label='Email' type='email' value={email} onChange={(e)=>this.handleChange('email',e.target.value)}/>\n                    </Form.Group>\n                    <Button type='submit' onClick={this.handleSubmit}>Save Changes</Button>\n                    <Button onClick={()=> this.props.dispatch(fetchDesiredContact(this.state.old_contact))}>Revert Changes</Button>\n                    {this.state.success ? <Message success header='Changes have been saved' /> : null}\n                </Form>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        let id = window.location.href.split(\"/\").pop()\n        fetch(`http://localhost:5000/contacts/${id}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(contact => {\n            this.setState({ old_contact:contact })\n            contact.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchDesiredContact(contact))\n        })\n    }\n}\n\nexport default connect(state => ({ contact: state.desiredContact }))(ContactPage);","import React from 'react'\nimport { connect } from 'react-redux';\nimport { fetchDesiredLesson, updateDesiredLesson, updateLessons } from '../actions/lessons';\nimport { authFail } from '../actions/current_user';\nimport { Header, Icon, Form, Button, Divider, Message, Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport NewAttendanceForm from '../components/newAttendanceForm';\n\nclass LessonPage extends React.Component{\n\n    state={\n        old_lesson: {},\n        attendanceForm: false,\n        editAttendance: null\n    }\n\n    handleChange = (key,info) => this.props.dispatch(updateDesiredLesson(key,info))\n    handleSubmit = () => {\n        fetch(`http://localhost:5000/lessons/${this.props.lesson.id}`,{\n            method:\"PATCH\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(this.props.lesson)\n        })\n        .then(r=>r.json())\n        .then( lesson =>{\n            this.setState({\n                success: true,\n                old_lesson: lesson\n            })\n            this.intervalID = setInterval(() => {\n                this.setState({\n                    success: false\n                })\n            }, 1000);\n        })\n    }\n\n    handleAttendanceSubmit(info,id){\n        let keys = ['date','status','cancelled_date']\n        let attendanceInfo = { make_up: parseInt(info.make_up.value) }\n        keys.forEach( key => attendanceInfo[key]=info[key].value )\n\n        fetch(`http://localhost:5000/attendances/${id}`,{\n            method: 'PATCH',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            },\n            body: JSON.stringify(attendanceInfo)\n        })\n        .then(r=>r.json())\n        .then(lesson =>{\n            if(lesson.error){\n                this.props.dispatch(authFail())\n            }else{\n                this.props.dispatch(fetchDesiredLesson(lesson))\n                this.props.dispatch(updateLessons(lesson))\n                this.setState({ editAttendance: null })\n            }\n        })\n    }\n\n\n    render(){\n        let { active, class_time, instructor, student, school, instructor_notes, instrument, misc_notes, attendances } = this.props.lesson\n        let { day, start_time, end_time } = class_time\n        return(<div>\n            <Header as='h2' icon textAlign='center'>\n                <Icon name='book' />\n                <Header.Content>{active ? null : \"(Inactive)\"} {day} | {start_time}-{end_time} | {instrument}</Header.Content>\n                <Header.Subheader>{instructor.first_name} {instructor.last_name} teaching {student.first_name} {student.last_name} at {school.name}</Header.Subheader>\n                <Link to={`/instructors/${instructor.id}`}><Button>Go to Instructor</Button></Link>\n                <Link to={`/students/${student.id}`}><Button>Go to Student</Button></Link>\n            </Header>\n\n            <Divider/>\n            <Form success style={{margin: '10px'}} onSubmit={()=>this.handleSubmit}>\n                <Form.Group widths='equal'>\n                    <Form.Dropdown\n                        required \n                        selection\n                        options={[\n                            { key: 1, value: true, text: \"Active\" },\n                            { key: 2, value: false, text: \"Inactive\" }\n                        ]}\n                        value={active}\n                        label=\"Active\"\n                        onChange={(e,d)=>{\n                            this.handleChange('active',d.value)\n                        }}\n                    />\n                    <Form.Input fluid required label='Instrument' value={instrument} onChange={(e)=>this.handleChange('instrument',e.target.value)}/>\n                </Form.Group>\n                <Form.TextArea label='Instructor Notes' value={instructor_notes} onChange={(e)=>this.handleChange('instructor_notes',e.target.value)}></Form.TextArea>\n                <Form.TextArea label='Miscellaneous Notes' value={misc_notes} onChange={(e)=>this.handleChange('misc_notes',e.target.value)}></Form.TextArea>\n\n                <Button type='submit' onClick={this.handleSubmit}>Save Changes</Button>\n                <Button onClick={()=> this.props.dispatch(fetchDesiredLesson(this.state.old_lesson))}>Revert Changes</Button>\n                {this.state.success ? <Message success header='Changes have been saved' /> : null}\n            </Form>\n            <Divider />\n\n            <Header as='h2'>\n                <Header.Content>Attendance</Header.Content><br/>\n                <Button onClick={()=> this.setState({ attendanceForm: !this.state.attendanceForm })}>{this.state.attendanceForm ? 'Hide Form' : 'Add a Attendance'}</Button>\n            </Header>\n\n            {this.state.attendanceForm ? <NewAttendanceForm/> : null}\n\n            <Table celled>\n\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Status</Table.HeaderCell>\n                        <Table.HeaderCell>Make-Up</Table.HeaderCell>\n                        <Table.HeaderCell>Cancelled Date</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {attendances.map( attendance =>(\n                        this.state.editAttendance===attendance.id ?\n                        <Table.Row key={attendance.id}>\n                            <Table.Cell>\n                                <Form key={attendance.id} style={{margin: '10px'}} onSubmit={(e)=>this.handleAttendanceSubmit(e.target,attendance.id)}>\n                                    <Form.Group widths='equal'>\n                                        <Form.Input id='date' type='date' defaultValue={attendance.date} required fluid label='Date' />\n                                        <Form.Input id='status' defaultValue={attendance.status} required fluid label='Status' />\n                                        <Form.Input id='make_up' defaultValue={attendance.make_up ? 1 : 0} type='number' fluid label='Make-up Lesson' />\n                                        <Form.Input id='cancelled_date' type='date' defaultValue={attendance.cancelled_date} fluid label='Cancelled Date' />\n                                        <Button type='submit'>Confirm Attendance</Button>\n                                    </Form.Group>\n                                </Form>\n                            </Table.Cell>\n                        </Table.Row>\n                        :\n                        <Table.Row key={attendance.id}>\n                            <Table.Cell>\n                                {attendance.date}\n                                {\n                                    this.state.editAttendance === attendance.id ?\n                                    <Button onClick={()=> this.setState({ editAttendance: null })}>Hide Form</Button>\n                                    :\n                                    <Button onClick={()=> this.setState({ editAttendance: attendance.id })}>Edit Attendance</Button>\n                                }\n                            </Table.Cell>\n                            <Table.Cell>{attendance.status}</Table.Cell>\n                            <Table.Cell>{attendance.make_up ? \"Yes\" : \"No\"}</Table.Cell>\n                            <Table.Cell>{attendance.cancelled_date}</Table.Cell>\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n        </div>)\n    }\n\n    componentDidMount(){\n        let id = window.location.href.split(\"/\").pop()\n        fetch(`http://localhost:5000/lessons/${id}`,{\n            method:\"GET\",\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': localStorage.getItem('token')\n            }\n        })\n        .then(r=> r.json())\n        .then(lesson => {\n            lesson.error ? this.props.dispatch(authFail()) : this.props.dispatch(fetchDesiredLesson(lesson))\n            this.setState({ old_lesson: lesson})\n        })\n    }\n\n    componentWillUnmount(){\n        this.props.dispatch(fetchDesiredLesson({\n            class_time: { start_time: \"\" },\n            student: {},\n            instructor: {},\n            attendances: [],\n            school: {},\n            instrument: \"\",\n            instructor_notes: \"\",\n            misc_notes: \"\"\n        }))\n        clearInterval(this.intervalID)\n    }\n}\n\nexport default connect(state => ({ lesson: state.desiredLesson }))(LessonPage);","import React from 'react'\nimport { Header, Icon } from 'semantic-ui-react'\n\nfunction Default(){\n    return(\n        <Header icon as='h2' textAlign='center'>\n            <Icon name='bug' circular/>\n            <Header.Content>Uh oh...404</Header.Content>\n            <Header.Subheader>This webpage does not exit. You may have the wrong url.</Header.Subheader>\n        </Header>\n    )\n}\n\nexport default Default","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authFail,authSuccess } from './actions/current_user';\n\nimport Home from './containers/home';\nimport SidebarClass from './components/sidebar';\nimport Students from './containers/students.js';\nimport StudentPage from './containers/studentPage';\nimport Instructors from './containers/instructors.js';\nimport InstructorPage from './containers/instructorPage.js';\nimport Families from './containers/families';\nimport FamilyPage from './containers/familyPage';\nimport Contacts from './containers/contacts';\nimport ContactPage from './containers/contactPage';\nimport LessonPage from './containers/lessonPage';\n\nimport Default from './containers/default';\n\n\n\nclass App extends React.Component{\n\n  render(){\n    return (\n      <BrowserRouter>\n        <SidebarClass/>\n        <Switch>\n          <Route exact path=\"/\" render={()=><Home/>}/>\n          <Route exact path=\"/students\" render={()=><Students/>} />\n          <Route strict path=\"/students/\" render={()=><StudentPage/>} />\n          <Route exact path=\"/instructors\" render={()=><Instructors/>} />\n          <Route strict path=\"/instructors/\" render={()=><InstructorPage/>} />\n          <Route exact path=\"/families\" render={()=><Families/>} />\n          <Route strict path=\"/families/\" render={()=><FamilyPage/>} />\n          <Route exact path=\"/contacts\" render={()=><Contacts/>} />\n          <Route strict path=\"/contacts/\" render={()=><ContactPage/>} />\n          <Route strict path=\"/lessons/\" render={()=><LessonPage/>} />\n          <Route component={()=><Default/>} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:5000/authorize',{\n      method:'POST',\n      headers: {\n          'Content-Type':'application/json',\n          'Authorization':localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n          initial:true\n      })\n    })\n    .then(r=> r.json())\n    .then(res =>{\n      if(res.error && res.message === 'Authorization Error'){\n        this.props.dispatch(authFail())\n      }else{\n        this.props.dispatch(authSuccess(res))\n      }\n    })\n  }\n\n}\n\nexport default connect(state => ({ authorized: state.currentUser.authorized }))(App);\n","import { combineReducers } from 'redux';\nimport students from './students.js';\nimport instructors from './instructors';\nimport currentUser from './current_user';\nimport lessons from './lessons';\nimport families from './families';\nimport contacts from './contacts';\nimport desiredInstructor from \"./desiredInstructor\";\nimport desiredStudent from \"./desiredStudent\";\nimport desiredFamily from \"./desiredFamily\";\nimport desiredContact from \"./desiredContact\";\nimport desiredClassTimes from \"./desiredClassTimes\";\nimport desiredLesson from \"./desiredLesson\";\n\nexport default combineReducers({\n  students,\n  instructors,\n  currentUser,\n  lessons,\n  families,\n  contacts,\n  desiredInstructor,\n  desiredStudent,\n  desiredFamily,\n  desiredContact,\n  desiredClassTimes,\n  desiredLesson\n});\n","export default (state=[],action)=>{\n    switch(action.type){\n        case(\"FETCH_STUDENTS\"):\n            return action.students\n        default:\n            return state;\n      }\n}","export default (state=[],action)=>{\n    switch(action.type){\n        case(\"FETCH_INSTRUCTORS\"):\n            return action.instructors\n        default:\n            return state;\n      }\n}","export default (state={ authorized: true, schools:[] },action)=>{\n    switch(action.type){\n        case(\"AUTHORIZATION_SUCCESS\"):\n            return { authorized: true, ...action.currentUser }\n        case(\"AUTHORIZATION_FAIL\"):\n            return { authorized: false }\n        default:\n            return state;\n      }\n}","export default (state=[\n        {\n            id: 1,\n            class_time: {},\n            instructor: {},\n            school: {}\n        }\n    ],action)=>{\n    switch(action.type){\n        case(\"FETCH_LESSONS\"):\n            let betterLessons = action.lessons.map( lesson => {\n                let longStart = lesson.class_time.start_time.split(\"T\")[1]\n                let shortStart = `${longStart.split(\":\")[0]}:${longStart.split(\":\")[1]}`\n        \n                let longEnd = lesson.class_time.end_time.split(\"T\")[1]\n                let shortEnd = `${longEnd.split(\":\")[0]}:${longEnd.split(\":\")[1]}`\n        \n                return {...lesson, class_time: { ...lesson.class_time, start_time: shortStart, end_time: shortEnd} }\n            })\n            return betterLessons.sort( (a,b) =>{\n                let newA = parseInt(a.class_time.start_time.split(\":\")[0]+a.class_time.start_time.split(\":\")[1])\n                let newB = parseInt(b.class_time.start_time.split(\":\")[0]+b.class_time.start_time.split(\":\")[1])\n                return newA - newB\n            })\n        case(\"UPDATE_LESSONS\"):\n            let longerStart = action.lesson.class_time.start_time.split(\"T\")[1]\n            let shorterStart = `${longerStart.split(\":\")[0]}:${longerStart.split(\":\")[1]}`\n\n            let longerEnd = action.lesson.class_time.end_time.split(\"T\")[1]\n            let shorterEnd = `${longerEnd.split(\":\")[0]}:${longerEnd.split(\":\")[1]}`\n\n            let betterLesson = {...action.lesson, class_time: { ...action.lesson.class_time, start_time: shorterStart, end_time: shorterEnd} }\n\n            return state.map( lesson => lesson.id === action.lesson.id ? betterLesson : lesson)\n\n        case(\"ADD_DESIRED_LESSON\"):\n            let longStart = action.lesson.class_time.start_time.split(\"T\")[1]\n            let shortStart = `${longStart.split(\":\")[0]}:${longStart.split(\":\")[1]}`\n\n            let longEnd = action.lesson.class_time.end_time.split(\"T\")[1]\n            let shortEnd = `${longEnd.split(\":\")[0]}:${longEnd.split(\":\")[1]}`\n\n            return [...state, {...action.lesson, class_time: { ...action.lesson.class_time, start_time: shortStart, end_time: shortEnd} }]\n        default:\n            return state;\n    }\n}","export default (state=[],action)=>{\n    switch(action.type){\n        case(\"FETCH_FAMILIES\"):\n            return action.families\n        default:\n            return state;\n      }\n}","export default (state=[],action)=>{\n    switch(action.type){\n        case(\"FETCH_CONTACTS\"):\n            return action.contacts\n        default:\n            return state;\n      }\n}","export default (state={\n    first_name: \"\",\n    last_name: \"\",\n    instrument_1: \"\",\n    instrument_2: \"\",\n    instrument_3: \"\",\n    phone_number: \"\",\n    emergency_number: \"\",\n    email: \"\",\n    date_of_birth: \"\",\n    billing_address: \"\",\n    pay_rate: \"\",\n    biography: \"\",\n    misc_notes: \"\",\n    class_times: [],\n    schools: [],\n    activeSchedule: true\n},action)=>{\n    switch(action.type){\n        case(\"FETCH_DESIRED_INSTRUCTOR\"):\n            return action.instructor\n        case(\"INSTRUCTOR_ONCHANGE\"):\n            return {...state, [action.key]: action.value}\n        case(\"SCHEDULE_ONCHANGE\"):\n            return {...state, activeSchedule: action.value}\n        default:\n            return state;\n    }\n}","export default (state={\n    first_name: \"\",\n    last_name: \"\",\n    phone_number: \"\",\n    email: \"\",\n    date_of_birth: \"\",\n    misc_notes: \"\",\n    medical_notes: \"\",\n    billing_notes: \"\"\n},action)=>{\n    switch(action.type){\n        case(\"FETCH_DESIRED_STUDENT\"):\n            return action.student\n        case(\"STUDENT_ONCHANGE\"):\n            return {...state, [action.key]: action.value}\n        default:\n            return state;\n    }\n}","export default (state={\n    family_name: \"\",\n    contacts: [],\n    students: [],\n    billing_total: \"\",\n    school: {name: \"\"}\n},action)=>{\n    switch(action.type){\n        case(\"FETCH_DESIRED_FAMILY\"):\n            return action.family\n        case(\"FAMILY_ONCHANGE\"):\n            return {...state, [action.key]: action.value}\n        default:\n            return state;\n    }\n}","export default (state={\n    first_name: \"\",\n    last_name: \"\",\n    relation_to_students: \"\",\n    phone_number: \"\",\n    emergency_number: \"\",\n    email: \"\",\n    billing_address: \"\"\n},action)=>{\n    switch(action.type){\n        case(\"FETCH_DESIRED_CONTACT\"):\n            return action.contact\n        case(\"CONTACT_ONCHANGE\"):\n            return {...state, [action.key]: action.value}\n        default:\n            return state;\n    }\n}","export default (state=[{\n    id: 1,\n    school: {},\n    students: [],\n    contacts: [],\n    start_time: \" T : \",\n    end_time: \" T : \",\n    lessons: []\n}],action)=>{\n    switch(action.type){\n        case(\"FETCH_DESIRED_CLASSTIMES\"):\n            return action.class_times\n        case(\"UPDATE_DESIRED_CLASSTIME\"):\n            return state.map( time => time.id === action.class_time.id ? action.class_time : time)\n        case(\"ADD_DESIRED_CLASSTIME\"):\n            return [...state, action.class_time]\n        default:\n            return state;\n      }\n}","export default (state={\n    class_time: { start_time: \"\" },\n    student: {},\n    instructor: {},\n    attendances: [],\n    school: {},\n    instrument: \"\",\n    instructor_notes: \"\",\n    misc_notes: \"\"\n},action)=>{\n    switch(action.type){\n        case(\"FETCH_DESIRED_LESSON\"):\n            if(action.lesson.class_time.start_time.length > 5){\n                let longStart = action.lesson.class_time.start_time.split(\"T\")[1]\n                let shortStart = `${longStart.split(\":\")[0]}:${longStart.split(\":\")[1]}`\n    \n                let longEnd = action.lesson.class_time.end_time.split(\"T\")[1]\n                let shortEnd = `${longEnd.split(\":\")[0]}:${longEnd.split(\":\")[1]}`\n    \n                return {...action.lesson, class_time: { ...action.lesson.class_time, start_time: shortStart, end_time: shortEnd} }\n            }else{\n                return action.lesson\n            }\n        case(\"UPDATE_DESIRED_LESSON\"):\n            return {...state, [action.key]: action.value}\n        case(\"ATTENDANCE_ADDED\"):\n            return {...state, submitted: action.value}\n        case(\"MAKE_UP_STATUS\"):\n            return {...state, make_up: action.value}\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// redux stuff\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index'\n\n// thunk\nimport ReduxThunk from 'redux-thunk'\n\nlet middlewares = [ applyMiddleware(ReduxThunk) ]\n\nif(window.__REDUX_DEVTOOLS_EXTENSION__) {\n    middlewares.push( window.__REDUX_DEVTOOLS_EXTENSION__() )\n}\n\nconst middleware = compose(...middlewares)\n\nconst store = createStore(\n    rootReducer,\n    middleware\n)\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}